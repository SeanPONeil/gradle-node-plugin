buildscript {
    apply from: "$rootDir/gradle/buildscript.gradle", to: buildscript
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

group = 'com.github.node-gradle'

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-gradle-plugin'

ext.nextVersion = 'minor'
apply plugin: 'com.cinnober.gradle.semver-git'

apply from: "$rootDir/gradle/additional-artifacts.gradle"
apply from: "$rootDir/gradle/coverage.gradle"
apply from: "$rootDir/gradle/travis-ci.gradle"
apply from: "$rootDir/gradle/publishing.gradle"

ext.compatibilityVersion = '1.8'
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

repositories {
    jcenter()
}

dependencies {
    testCompile 'cglib:cglib-nodep:3.2.9'
    testCompile 'org.apache.commons:commons-io:1.3.2'
    testCompile('org.spockframework:spock-core:1.3-groovy-2.5')
    testCompile('com.github.stefanbirkner:system-rules:1.19.0')
}

tasks.withType( Test ) {
    testLogging {
        events "skipped", "failed"
        exceptionFormat "full"
    }
}

test {
    if ( project.hasProperty( 'skipIT' ) )
    {
        exclude '**/*_integTest*'
    }
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

compileGroovy.dependsOn = compileGroovy.dependsOn - 'compileJava'
compileKotlin.dependsOn compileGroovy
compileKotlin.classpath += files(compileGroovy.destinationDir)
classes.dependsOn compileKotlin